plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
/*ext{
    set('springCloudVersion', '2021.0.1')
}

dependencyManagement{
    imports{
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}*/
dependencies {
// user-api 에서 domain 모듈을 쓰기위한 코드
    implementation project(path: ":domain", configuration: "default")

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.1.5'
    testImplementation('it.ozimov:embeded-redis:0.7.3'){
        exclude group: "org.slf4j", module: "slf4j-simple"
    }

    testImplementation 'com.h2database:h2'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.data:spring-data-envers:3.1.2'

    //implementation 'io.springfox:springfox-boot-starter:3.0.0'

    //implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'javax.xml.bind:jaxb-api:2.3.0'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
